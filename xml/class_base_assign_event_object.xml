<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="ja">
  <compounddef id="class_base_assign_event_object" kind="class" language="C#" prot="public">
    <compoundname>BaseAssignEventObject</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MonoBehaviour</basecompoundref>
    <derivedcompoundref refid="class_cleaning_assign_event" prot="public" virt="non-virtual">CleaningAssignEvent</derivedcompoundref>
    <derivedcompoundref refid="class_empty_dish_assign_event" prot="public" virt="non-virtual">EmptyDishAssignEvent</derivedcompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_base_assign_event_object_1a8848cfc5cc08e00bb634839f5bfe8abc" prot="private" static="no" mutable="no">
        <type>string</type>
        <definition>string BaseAssignEventObject.m_animatorTriggerName</definition>
        <argsstring></argsstring>
        <name>m_animatorTriggerName</name>
        <qualifiedname>BaseAssignEventObject.m_animatorTriggerName</qualifiedname>
        <briefdescription>
<para>アクセス時に実行させたいアニメーショントリガー名 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="19" column="13" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="19" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_base_assign_event_object_1a8ec273eeefbcde4807241fb07e9d8771" prot="private" static="no" mutable="no">
        <type>List&lt; string &gt;</type>
        <definition>List&lt;string&gt; BaseAssignEventObject.m_tagList</definition>
        <argsstring></argsstring>
        <name>m_tagList</name>
        <qualifiedname>BaseAssignEventObject.m_tagList</qualifiedname>
        <initializer>= new()</initializer>
        <briefdescription>
<para>接触イベントを発生させるためのタグリスト </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="24" column="11" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="24" bodyend="-1"/>
        <referencedby refid="class_base_assign_event_object_1a1b6ff85cb8b676b30933da474adb801a" compoundref="_base_assign_event_object_8cs" startline="80" endline="96">OnTriggerEnter</referencedby>
        <referencedby refid="class_base_assign_event_object_1a0f016fb4795e25515f45f5c999cea0e9" compoundref="_base_assign_event_object_8cs" startline="98" endline="114">OnTriggerExit</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_base_assign_event_object_1a28293c3f8ba65e34c84b158cda41eed5" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BaseAssignEventObject.m_isCollided</definition>
        <argsstring></argsstring>
        <name>m_isCollided</name>
        <qualifiedname>BaseAssignEventObject.m_isCollided</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>接触中かを管理するプロパティ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="30" column="18" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="30" bodyend="-1"/>
        <referencedby refid="class_base_assign_event_object_1a1b6ff85cb8b676b30933da474adb801a" compoundref="_base_assign_event_object_8cs" startline="80" endline="96">OnTriggerEnter</referencedby>
        <referencedby refid="class_base_assign_event_object_1a0f016fb4795e25515f45f5c999cea0e9" compoundref="_base_assign_event_object_8cs" startline="98" endline="114">OnTriggerExit</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_base_assign_event_object_1ae5e16c6e2f4d1477aacb7c8b81728b2f" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>string</type>
        <definition>string BaseAssignEventObject.AnimatorTriggerName</definition>
        <argsstring></argsstring>
        <name>AnimatorTriggerName</name>
        <qualifiedname>BaseAssignEventObject.AnimatorTriggerName</qualifiedname>
        <briefdescription>
<para>アニメーショントリガー名のプロパティ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="27" column="19" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="property" id="class_base_assign_event_object_1a44b658fc3b708c7d649b322f4798367b" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool BaseAssignEventObject.Collided</definition>
        <argsstring></argsstring>
        <name>Collided</name>
        <qualifiedname>BaseAssignEventObject.Collided</qualifiedname>
        <briefdescription>
<para>接触中かを返すプロパティ </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="33" column="17" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="33" bodyend="33"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_base_assign_event_object_1a521ef17fcf6aa8a021de8a8279eff826" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void BaseAssignEventObject.OnCollisionTriggerEvent</definition>
        <argsstring>()</argsstring>
        <name>OnCollisionTriggerEvent</name>
        <qualifiedname>BaseAssignEventObject.OnCollisionTriggerEvent</qualifiedname>
        <reimplementedby refid="class_cleaning_assign_event_1aa71a9d108be3378baaaced536bb1a761">OnCollisionTriggerEvent</reimplementedby>
        <reimplementedby refid="class_empty_dish_assign_event_1a3d457bca98332c6fa3557ffd8ae69d6d">OnCollisionTriggerEvent</reimplementedby>
        <briefdescription>
<para>接触時のイベント m_tagListに登録されたタグオブジェクトとの接触時に自動で呼ばれる </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="43" column="28" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="43" bodyend="46"/>
        <referencedby refid="class_base_assign_event_object_1a1b6ff85cb8b676b30933da474adb801a" compoundref="_base_assign_event_object_8cs" startline="80" endline="96">OnTriggerEnter</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_base_assign_event_object_1a7c9491825a0b8b3f466d5f2e750a1b23" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void BaseAssignEventObject.OnCollisionTriggerExitEvent</definition>
        <argsstring>()</argsstring>
        <name>OnCollisionTriggerExitEvent</name>
        <qualifiedname>BaseAssignEventObject.OnCollisionTriggerExitEvent</qualifiedname>
        <reimplementedby refid="class_cleaning_assign_event_1aaddf5a6bf546336596dffb033185c45f">OnCollisionTriggerExitEvent</reimplementedby>
        <reimplementedby refid="class_empty_dish_assign_event_1a93ce70f72800ae4d972cf59d7d77ab77">OnCollisionTriggerExitEvent</reimplementedby>
        <briefdescription>
<para>接触終了時のイベント </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="51" column="28" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="51" bodyend="54"/>
        <referencedby refid="class_base_assign_event_object_1a0f016fb4795e25515f45f5c999cea0e9" compoundref="_base_assign_event_object_8cs" startline="98" endline="114">OnTriggerExit</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_base_assign_event_object_1a953ac80b2572cff4cb3175f504b7cd63" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BaseAssignEventObject.Start</definition>
        <argsstring>()</argsstring>
        <name>Start</name>
        <qualifiedname>BaseAssignEventObject.Start</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="116" column="20" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="116" bodyend="127"/>
        <references refid="interface_i_meta_a_i_1a81091acf9bf85e074a370e77b8bb3e16" compoundref="_meta_a_i_8cs" startline="13" endline="13">IMetaAI&lt; T &gt;.Instance</references>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_base_assign_event_object_1a6dd22b15080f16e29d91af3012592643" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void BaseAssignEventObject.OnCollisionAccesesEvent</definition>
        <argsstring>()</argsstring>
        <name>OnCollisionAccesesEvent</name>
        <qualifiedname>BaseAssignEventObject.OnCollisionAccesesEvent</qualifiedname>
        <reimplementedby refid="class_cleaning_assign_event_1af9cf097b42c865aa7148f15d20e39790">OnCollisionAccesesEvent</reimplementedby>
        <reimplementedby refid="class_empty_dish_assign_event_1a2c989c794b39f713a52bcc677e216d71">OnCollisionAccesesEvent</reimplementedby>
        <briefdescription>
<para>何らかのアクセスがあった際のイベント アクセスの定義は継承先で行う </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="60" column="25" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="60" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="class_base_assign_event_object_1a3467edd296ee0076c21c94d3a477fc14" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool BaseAssignEventObject.IsAccessed</definition>
        <argsstring>(ref IInputProvider input)</argsstring>
        <name>IsAccessed</name>
        <qualifiedname>BaseAssignEventObject.IsAccessed</qualifiedname>
        <reimplementedby refid="class_cleaning_assign_event_1a6dd4ca6dd59ee825b5366a94c7dcce10">IsAccessed</reimplementedby>
        <reimplementedby refid="class_empty_dish_assign_event_1a442e137d4625c64577d672652fa76763">IsAccessed</reimplementedby>
        <param>
          <type>ref <ref refid="interface_i_input_provider" kindref="compound">IInputProvider</ref></type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>アクセスされたかどうかを返す 主にキーアクセスを想定 </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="71" column="25" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="71" bodyend="75"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="private-func">
      <memberdef kind="function" id="class_base_assign_event_object_1a1b6ff85cb8b676b30933da474adb801a" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BaseAssignEventObject.OnTriggerEnter</definition>
        <argsstring>(Collider other)</argsstring>
        <name>OnTriggerEnter</name>
        <qualifiedname>BaseAssignEventObject.OnTriggerEnter</qualifiedname>
        <param>
          <type>Collider</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="80" column="18" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="80" bodyend="96"/>
        <references refid="class_base_assign_event_object_1a28293c3f8ba65e34c84b158cda41eed5" compoundref="_base_assign_event_object_8cs" startline="30">m_isCollided</references>
        <references refid="class_base_assign_event_object_1a8ec273eeefbcde4807241fb07e9d8771" compoundref="_base_assign_event_object_8cs" startline="24">m_tagList</references>
        <references refid="class_base_assign_event_object_1a521ef17fcf6aa8a021de8a8279eff826" compoundref="_base_assign_event_object_8cs" startline="43" endline="46">OnCollisionTriggerEvent</references>
      </memberdef>
      <memberdef kind="function" id="class_base_assign_event_object_1a0f016fb4795e25515f45f5c999cea0e9" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BaseAssignEventObject.OnTriggerExit</definition>
        <argsstring>(Collider other)</argsstring>
        <name>OnTriggerExit</name>
        <qualifiedname>BaseAssignEventObject.OnTriggerExit</qualifiedname>
        <param>
          <type>Collider</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseAssignEventObject.cs" line="98" column="18" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="98" bodyend="114"/>
        <references refid="class_base_assign_event_object_1a28293c3f8ba65e34c84b158cda41eed5" compoundref="_base_assign_event_object_8cs" startline="30">m_isCollided</references>
        <references refid="class_base_assign_event_object_1a8ec273eeefbcde4807241fb07e9d8771" compoundref="_base_assign_event_object_8cs" startline="24">m_tagList</references>
        <references refid="class_base_assign_event_object_1a7c9491825a0b8b3f466d5f2e750a1b23" compoundref="_base_assign_event_object_8cs" startline="51" endline="54">OnCollisionTriggerExitEvent</references>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>ImetaAIを用いてイベントオブジェクト群として管理するための外部アクセス前提イベントオブジェクトの基底クラス 接触時イベント(自動),接触終了時イベント(自動)、アクセス時イベント(外部呼び出し) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>BaseAssignEventObject</label>
        <link refid="class_base_assign_event_object"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>CleaningAssignEvent</label>
        <link refid="class_cleaning_assign_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>EmptyDishAssignEvent</label>
        <link refid="class_empty_dish_assign_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MonoBehaviour</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BaseAssignEventObject</label>
        <link refid="class_base_assign_event_object"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MonoBehaviour</label>
      </node>
    </collaborationgraph>
    <location file="108_Management_Event/BaseAssignEventObject.cs" line="15" column="7" bodyfile="108_Management_Event/BaseAssignEventObject.cs" bodystart="16" bodyend="128"/>
    <listofallmembers>
      <member refid="class_base_assign_event_object_1ae5e16c6e2f4d1477aacb7c8b81728b2f" prot="public" virt="non-virtual"><scope>BaseAssignEventObject</scope><name>AnimatorTriggerName</name></member>
      <member refid="class_base_assign_event_object_1a44b658fc3b708c7d649b322f4798367b" prot="public" virt="non-virtual"><scope>BaseAssignEventObject</scope><name>Collided</name></member>
      <member refid="class_base_assign_event_object_1a3467edd296ee0076c21c94d3a477fc14" prot="public" virt="virtual"><scope>BaseAssignEventObject</scope><name>IsAccessed</name></member>
      <member refid="class_base_assign_event_object_1a8848cfc5cc08e00bb634839f5bfe8abc" prot="private" virt="non-virtual"><scope>BaseAssignEventObject</scope><name>m_animatorTriggerName</name></member>
      <member refid="class_base_assign_event_object_1a28293c3f8ba65e34c84b158cda41eed5" prot="private" virt="non-virtual"><scope>BaseAssignEventObject</scope><name>m_isCollided</name></member>
      <member refid="class_base_assign_event_object_1a8ec273eeefbcde4807241fb07e9d8771" prot="private" virt="non-virtual"><scope>BaseAssignEventObject</scope><name>m_tagList</name></member>
      <member refid="class_base_assign_event_object_1a6dd22b15080f16e29d91af3012592643" prot="public" virt="virtual"><scope>BaseAssignEventObject</scope><name>OnCollisionAccesesEvent</name></member>
      <member refid="class_base_assign_event_object_1a521ef17fcf6aa8a021de8a8279eff826" prot="protected" virt="virtual"><scope>BaseAssignEventObject</scope><name>OnCollisionTriggerEvent</name></member>
      <member refid="class_base_assign_event_object_1a7c9491825a0b8b3f466d5f2e750a1b23" prot="protected" virt="virtual"><scope>BaseAssignEventObject</scope><name>OnCollisionTriggerExitEvent</name></member>
      <member refid="class_base_assign_event_object_1a1b6ff85cb8b676b30933da474adb801a" prot="private" virt="non-virtual"><scope>BaseAssignEventObject</scope><name>OnTriggerEnter</name></member>
      <member refid="class_base_assign_event_object_1a0f016fb4795e25515f45f5c999cea0e9" prot="private" virt="non-virtual"><scope>BaseAssignEventObject</scope><name>OnTriggerExit</name></member>
      <member refid="class_base_assign_event_object_1a953ac80b2572cff4cb3175f504b7cd63" prot="protected" virt="non-virtual"><scope>BaseAssignEventObject</scope><name>Start</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
