<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="ja">
  <compounddef id="class_base_management_event" kind="class" language="C#" prot="public">
    <compoundname>BaseManagementEvent</compoundname>
    <basecompoundref prot="public" virt="non-virtual">MonoBehaviour</basecompoundref>
    <derivedcompoundref refid="class_appear_gangster_event" prot="public" virt="non-virtual">AppearGangsterEvent</derivedcompoundref>
    <derivedcompoundref refid="class_dine_dash_event" prot="public" virt="non-virtual">DineDashEvent</derivedcompoundref>
    <derivedcompoundref refid="class_generate_cleaning_event" prot="public" virt="non-virtual">GenerateCleaningEvent</derivedcompoundref>
    <derivedcompoundref refid="class_generate_empty_dish_event" prot="public" virt="non-virtual">GenerateEmptyDishEvent</derivedcompoundref>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_base_management_event_1acaf5fdce8fe432f87a4747478fe172e5" prot="private" static="no" mutable="no">
        <type><ref refid="namespace_management_event_info_1a8279f4ecf2fd7f2d31db779aaa6cc368" kindref="member">ManagementEventID</ref></type>
        <definition>ManagementEventID BaseManagementEvent.m_eventID</definition>
        <argsstring></argsstring>
        <name>m_eventID</name>
        <qualifiedname>BaseManagementEvent.m_eventID</qualifiedname>
        <initializer>= ManagementEventID.Gangster</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseManagementEvent.cs" line="21" column="31" bodyfile="108_Management_Event/BaseManagementEvent.cs" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_base_management_event_1a13479c7729d92bcd5a8080476961899c" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool BaseManagementEvent.m_isEventEnd</definition>
        <argsstring></argsstring>
        <name>m_isEventEnd</name>
        <qualifiedname>BaseManagementEvent.m_isEventEnd</qualifiedname>
        <initializer>= false</initializer>
        <briefdescription>
<para>動作が終了したかどうか </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseManagementEvent.cs" line="30" column="18" bodyfile="108_Management_Event/BaseManagementEvent.cs" bodystart="30" bodyend="-1"/>
        <referencedby refid="class_base_management_event_1ae99b77f2df91268543183fc5db54cd20" compoundref="_base_management_event_8cs" startline="57" endline="61">OnUpdate</referencedby>
        <referencedby refid="class_base_management_event_1a2ad6093da5ea506264fc54a5dd7f03c0" compoundref="_base_management_event_8cs" startline="77" endline="86">SetEventEnd</referencedby>
      </memberdef>
    </sectiondef>
    <sectiondef kind="property">
      <memberdef kind="property" id="class_base_management_event_1a089c8617e13869fdee18f5975f95611a" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type><ref refid="namespace_management_event_info_1a8279f4ecf2fd7f2d31db779aaa6cc368" kindref="member">ManagementEventID</ref></type>
        <definition>ManagementEventID BaseManagementEvent.EventID</definition>
        <argsstring></argsstring>
        <name>EventID</name>
        <qualifiedname>BaseManagementEvent.EventID</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseManagementEvent.cs" line="23" column="30" bodyfile="108_Management_Event/BaseManagementEvent.cs" bodystart="24" bodyend="26"/>
        <referencedby refid="class_management_event_u_i_1a8712f591f7acaaf019633999baa338bc" compoundref="_management_event_u_i_8cs" startline="50" endline="63">ManagementEventUI.SetUI</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_base_management_event_1a3c2722f4a1ee41d27c8adb6b1e2359bd" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>bool</type>
        <definition>bool BaseManagementEvent.IsEventEnd</definition>
        <argsstring></argsstring>
        <name>IsEventEnd</name>
        <qualifiedname>BaseManagementEvent.IsEventEnd</qualifiedname>
        <briefdescription>
<para>動作終了かどうかの参照用 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseManagementEvent.cs" line="33" column="17" bodyfile="108_Management_Event/BaseManagementEvent.cs" bodystart="34" bodyend="36"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="class_base_management_event_1a8bc6e5f52467ea34617a687ff5f1e660" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void BaseManagementEvent.OnStart</definition>
        <argsstring>()</argsstring>
        <name>OnStart</name>
        <qualifiedname>BaseManagementEvent.OnStart</qualifiedname>
        <reimplementedby refid="class_appear_gangster_event_1afb7fce13c240024d12b6743a997ef364">OnStart</reimplementedby>
        <reimplementedby refid="class_generate_cleaning_event_1a365c840ada079e49c6489f54f6225f6e">OnStart</reimplementedby>
        <reimplementedby refid="class_generate_empty_dish_event_1a38874d35bd43fa2b9f1a256991f312bd">OnStart</reimplementedby>
        <briefdescription>
<para>イベントの開始 継承先でオーバーライドする </para>
        </briefdescription>
        <detaileddescription>
<para>イベント開始処理 </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseManagementEvent.cs" line="48" column="25" bodyfile="108_Management_Event/BaseManagementEvent.cs" bodystart="48" bodyend="51"/>
        <referencedby refid="class_management_event_manager_1ad998700825b7ffaa8b99331b5329430d" compoundref="_management_event_manager_8cs" startline="49" endline="59">ManagementEventManager.AddEventList</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_base_management_event_1ae99b77f2df91268543183fc5db54cd20" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void BaseManagementEvent.OnUpdate</definition>
        <argsstring>()</argsstring>
        <name>OnUpdate</name>
        <qualifiedname>BaseManagementEvent.OnUpdate</qualifiedname>
        <reimplementedby refid="class_appear_gangster_event_1ae95c1071b17ff176c5dddb27ee800a3c">OnUpdate</reimplementedby>
        <reimplementedby refid="class_dine_dash_event_1a6d80be1a1a302611cae027ab2140e38f">OnUpdate</reimplementedby>
        <reimplementedby refid="class_generate_cleaning_event_1a7d0c77e47be73520df08c896e47f8ff1">OnUpdate</reimplementedby>
        <reimplementedby refid="class_generate_empty_dish_event_1a0c7b37780455799b28c6eb955d784910">OnUpdate</reimplementedby>
        <briefdescription>
<para>イベント実行処理 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseManagementEvent.cs" line="57" column="25" bodyfile="108_Management_Event/BaseManagementEvent.cs" bodystart="57" bodyend="61"/>
        <references refid="class_base_management_event_1a13479c7729d92bcd5a8080476961899c" compoundref="_base_management_event_8cs" startline="30">m_isEventEnd</references>
      </memberdef>
      <memberdef kind="function" id="class_base_management_event_1a65ce363f68367e960a5e96256485e959" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void BaseManagementEvent.OnExit</definition>
        <argsstring>()</argsstring>
        <name>OnExit</name>
        <qualifiedname>BaseManagementEvent.OnExit</qualifiedname>
        <reimplementedby refid="class_generate_cleaning_event_1a7e6bee9b30b80ef4e0bcf38225f3e589">OnExit</reimplementedby>
        <reimplementedby refid="class_generate_empty_dish_event_1ac1595350e00e0ef9eda6ddeac97b0098">OnExit</reimplementedby>
        <briefdescription>
<para>イベント終了処理 </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseManagementEvent.cs" line="67" column="25" bodyfile="108_Management_Event/BaseManagementEvent.cs" bodystart="67" bodyend="70"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="protected-func">
      <memberdef kind="function" id="class_base_management_event_1a2ad6093da5ea506264fc54a5dd7f03c0" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void BaseManagementEvent.SetEventEnd</definition>
        <argsstring>(EventSolutionType _type)</argsstring>
        <name>SetEventEnd</name>
        <qualifiedname>BaseManagementEvent.SetEventEnd</qualifiedname>
        <param>
          <type><ref refid="namespace_management_game_info_1a0f9839d5f5051ec376b835e0f47b9ec8" kindref="member">EventSolutionType</ref></type>
          <declname>_type</declname>
        </param>
        <briefdescription>
<para>イベント終了処理 イベントの解決での終了か失敗での終了か指定できる </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_type</parametername>
</parameternamelist>
<parameterdescription>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="108_Management_Event/BaseManagementEvent.cs" line="77" column="20" bodyfile="108_Management_Event/BaseManagementEvent.cs" bodystart="77" bodyend="86"/>
        <references refid="class_base_manager_1aa8c8aec87570694dda230cb2dfac79ac" compoundref="_base_manager_8cs" startline="6">BaseManager&lt; T &gt;.instance</references>
        <references refid="class_base_management_event_1a13479c7729d92bcd5a8080476961899c" compoundref="_base_management_event_8cs" startline="30">m_isEventEnd</references>
        <referencedby refid="class_generate_cleaning_event_1ad8f51ecc9936849ad5e70fe9dd32fc8e" compoundref="_generate_cleaning_event_8cs" startline="113" endline="119">GenerateCleaningEvent.CheckDirt</referencedby>
        <referencedby refid="class_generate_cleaning_event_1afbf78bf24160f7967b13bcfec2f3a0ee" compoundref="_generate_cleaning_event_8cs" startline="102" endline="109">GenerateCleaningEvent.CountEndTime</referencedby>
        <referencedby refid="class_appear_gangster_event_1ae95c1071b17ff176c5dddb27ee800a3c" compoundref="_appear_gangster_event_8cs" startline="34" endline="42">AppearGangsterEvent.OnUpdate</referencedby>
        <referencedby refid="class_dine_dash_event_1a6d80be1a1a302611cae027ab2140e38f" compoundref="_dine_dash_event_8cs" startline="24" endline="32">DineDashEvent.OnUpdate</referencedby>
        <referencedby refid="class_generate_empty_dish_event_1a0c7b37780455799b28c6eb955d784910" compoundref="_generate_empty_dish_event_8cs" startline="29" endline="42">GenerateEmptyDishEvent.OnUpdate</referencedby>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>経営イベントの基底クラス マネージャーから管理される想定 (<ref refid="_management_event_manager_8cs" kindref="compound">ManagementEventManager.cs</ref>) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="3">
        <label>AppearGangsterEvent</label>
        <link refid="class_appear_gangster_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="1">
        <label>BaseManagementEvent</label>
        <link refid="class_base_management_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>DineDashEvent</label>
        <link refid="class_dine_dash_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="5">
        <label>GenerateCleaningEvent</label>
        <link refid="class_generate_cleaning_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="6">
        <label>GenerateEmptyDishEvent</label>
        <link refid="class_generate_empty_dish_event"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MonoBehaviour</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>BaseManagementEvent</label>
        <link refid="class_base_management_event"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>MonoBehaviour</label>
      </node>
    </collaborationgraph>
    <location file="108_Management_Event/BaseManagementEvent.cs" line="16" column="7" bodyfile="108_Management_Event/BaseManagementEvent.cs" bodystart="17" bodyend="88"/>
    <listofallmembers>
      <member refid="class_base_management_event_1a089c8617e13869fdee18f5975f95611a" prot="public" virt="non-virtual"><scope>BaseManagementEvent</scope><name>EventID</name></member>
      <member refid="class_base_management_event_1a3c2722f4a1ee41d27c8adb6b1e2359bd" prot="public" virt="non-virtual"><scope>BaseManagementEvent</scope><name>IsEventEnd</name></member>
      <member refid="class_base_management_event_1acaf5fdce8fe432f87a4747478fe172e5" prot="private" virt="non-virtual"><scope>BaseManagementEvent</scope><name>m_eventID</name></member>
      <member refid="class_base_management_event_1a13479c7729d92bcd5a8080476961899c" prot="private" virt="non-virtual"><scope>BaseManagementEvent</scope><name>m_isEventEnd</name></member>
      <member refid="class_base_management_event_1a65ce363f68367e960a5e96256485e959" prot="public" virt="virtual"><scope>BaseManagementEvent</scope><name>OnExit</name></member>
      <member refid="class_base_management_event_1a8bc6e5f52467ea34617a687ff5f1e660" prot="public" virt="virtual"><scope>BaseManagementEvent</scope><name>OnStart</name></member>
      <member refid="class_base_management_event_1ae99b77f2df91268543183fc5db54cd20" prot="public" virt="virtual"><scope>BaseManagementEvent</scope><name>OnUpdate</name></member>
      <member refid="class_base_management_event_1a2ad6093da5ea506264fc54a5dd7f03c0" prot="protected" virt="non-virtual"><scope>BaseManagementEvent</scope><name>SetEventEnd</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
